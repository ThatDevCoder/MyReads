{"version":3,"sources":["BooksAPI.js","Rating.js","Book.js","ListBooks.js","SearchBooks.js","BooksGrid.js","Utils.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Rating","props","rating","numberOfStars","starsArray","i","push","react_default","a","createElement","key","className","Book","thumbnail","imageLinks","title","authors","averageRating","style","width","height","backgroundImage","defaultValue","onChange","e","target","value","onChangeShelf","disabled","join","src_Rating","ListBooks","heading","booksNode","Array","isArray","map","src_Book","SearchBooks","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateSearch","searchText","myBooks","setState","BooksAPI","forEach","b","myBook","find","mb","state","currState","showBooks","updateSearchThrottled","throttle","updateSearchDebounced","debounce","handleInputChange","length","react_router_dom","to","type","placeholder","src_ListBooks","React","Component","BooksGrid","groupBooksByShelf","reduce","pv","x","_this2","booksByShelf","keys","camelCase","replace","match","toUpperCase","trim","BooksApp","handleChangeShelf","toConsumableArray","filter","console","log","_this3","react_router","exact","path","render","src_BooksGrid","src_SearchBooks","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d28b84d6.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Rating(props) {\r\n  var rating = props.rating;\r\n  var numberOfStars = props.numberOfStars;\r\n\r\n  var starsArray = [];\r\n  for (let i = 0; i < numberOfStars; i++) {\r\n    if (i < rating) {\r\n      starsArray.push(<span key={i} className=\"fa fa-star checked\"></span>);\r\n    } else {\r\n      starsArray.push(<span key={i} className=\"fa fa-star\"></span>);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {starsArray}\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.propTypes = {\r\n  rating: PropTypes.number,\r\n  numberOfStars: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Rating;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Rating from './Rating';\r\n\r\nfunction Book(props) {\r\n  const thumbnail = props.book.imageLinks ? props.book.imageLinks.thumbnail : null;\r\n  const title = props.book.title;\r\n  const authors = props.book.authors;\r\n  const shelf = props.book.shelf;\r\n  const rating = props.book.averageRating;\r\n\r\n  const handleChangeShelf = shelf => {\r\n    props.onChangeShelf(shelf, props.book);\r\n  }\r\n\r\n  return (\r\n    <div className=\"book\">\r\n      <div className=\"book-top\">\r\n        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url(\"' + thumbnail + '\")' }}></div>\r\n        <div className=\"book-shelf-changer\">\r\n          <select defaultValue={shelf} onChange={(e) => handleChangeShelf(e.target.value)}>\r\n            <option value=\"move\" disabled>Move to...</option>\r\n            <option value=\"currentlyReading\">Currently Reading</option>\r\n            <option value=\"wantToRead\">Want to Read</option>\r\n            <option value=\"read\">Read</option>\r\n            <option value=\"none\">None</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"book-title\">{title}</div>\r\n      <div className=\"book-authors\">{authors ? authors.join(' & ') : null}</div>\r\n      <Rating rating={rating} numberOfStars={5} />\r\n    </div>\r\n  );\r\n}\r\n\r\nBook.propTypes = {\r\n  onChangeShelf: PropTypes.func.isRequired,\r\n  book: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Book;","import React from 'react';\r\nimport Book from './Book';\r\n\r\nfunction ListBooks(props) {\r\n  const books = props.books;\r\n  const heading = props.heading;\r\n  const booksNode = books && Array.isArray(books) ? books.map(book => (\r\n    <li key={book.id}>\r\n      <Book book={book} onChangeShelf={props.onChangeShelf} />\r\n    </li>\r\n  )) : null;\r\n  return (\r\n    <div className=\"list-books\">\r\n      {\r\n        heading ?\r\n          <div className=\"list-books-content\">\r\n            <div>\r\n              <div className=\"bookshelf\">\r\n                <h2 className=\"bookshelf-title\">{heading}</h2>\r\n                <div className=\"bookshelf-books\">\r\n                  <ol className=\"books-grid\">\r\n                    {booksNode}\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          :\r\n          <ol className=\"books-grid\">\r\n            {booksNode}\r\n          </ol>\r\n      }\r\n\r\n    </div>);\r\n}\r\n\r\nexport default ListBooks;","import React from 'react';\r\nimport { \r\n  Link\r\n} from 'react-router-dom'\r\nimport { throttle, debounce } from 'throttle-debounce';\r\nimport ListBooks from './ListBooks';\r\nimport * as BooksAPI from './BooksAPI';\r\n\r\nclass SearchBooks extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchText: '',\r\n      showBooks: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateSearch(this.state.searchText);\r\n  }\r\n\r\n  updateSearch = (searchText) => {\r\n    const myBooks = this.props.books;\r\n\r\n    if (!searchText) {\r\n      this.setState(() => ({showBooks: [], searchText: ''}));\r\n    } else {\r\n      this.setState(() => ({searchText: searchText}));\r\n      BooksAPI.search(searchText).then(books => {\r\n        if (!Array.isArray(books)) {\r\n          books = [];\r\n        }\r\n\r\n        books.forEach(b => {\r\n          const myBook = myBooks.find(mb => mb.id === b.id);\r\n          if (myBook != null) {\r\n            b.shelf = myBook.shelf;\r\n          } else {\r\n            b.shelf = 'none';\r\n          }\r\n        });\r\n\r\n        if (searchText === this.state.searchText) {\r\n          this.setState((currState) => ({\r\n            ...currState,\r\n            showBooks: books\r\n          }));\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  updateSearchThrottled = throttle(500, this.updateSearch);\r\n  updateSearchDebounced = debounce(500, this.updateSearch);\r\n\r\n  handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value.length < 5) {\r\n      this.updateSearchThrottled(value);\r\n    } else {\r\n      this.updateSearchDebounced(value);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to='/' className=\"close-search\">Close</Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            {/*\r\n            NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n            You can find these search terms here:\r\n            https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n            However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n            you don't find a specific author or title. Every search is limited by search terms.\r\n          */}\r\n            <input type=\"text\" placeholder=\"Search by title or author\" onChange={this.handleInputChange} />\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ListBooks books={this.state.showBooks}\r\n            onChangeShelf={this.props.onChangeShelf}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBooks;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListBooks from './ListBooks';\r\nimport { camelToTitle } from './Utils';\r\nimport {  \r\n  Link\r\n} from 'react-router-dom'\r\n\r\nclass BooksGrid extends React.Component {\r\n  groupBooksByShelf = (books) => books.reduce((pv, x) => {\r\n    (pv[x.shelf] = pv[x.shelf] || []).push(x);\r\n    return pv;\r\n  }, {});\r\n\r\n  render() {\r\n    const booksByShelf = this.groupBooksByShelf(this.props.books);\r\n\r\n    return (\r\n      <div>\r\n        {Object.keys(booksByShelf).map(shelf => {\r\n          if (booksByShelf[shelf].length === 0) {\r\n            return null;\r\n          }\r\n          return <ListBooks key={shelf} books={booksByShelf[shelf]}\r\n            shelf={shelf}\r\n            heading={camelToTitle(shelf)}\r\n            onChangeShelf={this.props.onChangeShelf}\r\n          />\r\n        })}\r\n        <div className=\"open-search\">\r\n          <Link to='/search'>Search Books</Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nBooksGrid.propTypes = {\r\n  searchText: PropTypes.string,\r\n  books: PropTypes.array.isRequired,\r\n  onChangeShelf: PropTypes.func.isRequired\r\n};\r\n\r\nexport default BooksGrid;","export function camelToTitle(camelCase) {\r\n    return camelCase\r\n    .replace(/([A-Z])/g, (match) => ` ${match}`)\r\n    .replace(/^./, (match) => match.toUpperCase())\r\n    .trim();\r\n  }","import React from 'react'\nimport { \n  Route, \n} from 'react-router-dom'\n\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport SearchBooks from './SearchBooks';\nimport BooksGrid from './BooksGrid';\n\nclass BooksApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: []\n    };\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll().then(books => {\n      this.setState(() => ({ books: books }));\n    });\n  }\n\n  handleChangeShelf = (shelf, book) => {\n    BooksAPI.update(book, shelf).then(res => {\n      book.shelf = shelf;\n      this.setState((currState) => ({\n        ...currState,\n        books: [...currState.books.filter(x => x.id !== book.id), book]\n      }));\n      console.log('updated', res);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Route exact path='/' render={() =>\n          <div>\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <BooksGrid books={this.state.books} onChangeShelf={this.handleChangeShelf} />\n          </div>} />\n        <Route path='/search' render={() => \n          <SearchBooks books={this.state.books} onChangeShelf={this.handleChangeShelf} />} />\n      </div>\n    )\n  }\n}\n\nexport default BooksApp","//ran npm install, npm install --save react-router-dom\nimport App from './App'\nimport { \n    BrowserRouter, \n} from 'react-router-dom'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\n\nReactDOM.render(<BrowserRouter> \n\t<App/> \n\t</BrowserRouter>,\n\tdocument.getElementById('root'))"],"sourceRoot":""}